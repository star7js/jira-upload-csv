[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jira-csv-upload"
version = "1.0.0"
description = "A robust Python tool for automating the creation of Jira issues and subtasks from CSV data"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Josh Simnitt", email = "josh.simnitt@example.com"}
]
keywords = ["jira", "csv", "automation", "atlassian", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business",
]
requires-python = ">=3.8"
dependencies = [
    "atlassian-python-api>=3.41.0",
    "certifi>=2023.7.0",
    "charset-normalizer>=3.3.0",
    "Deprecated>=1.2.0",
    "idna>=3.4.0",
    "oauthlib>=3.2.0",
    "requests>=2.31.0",
    "requests-oauthlib>=1.3.0",
    "six>=1.16.0",
    "urllib3<2.0.0",
    "wrapt>=1.15.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "pydantic<2.0.0; python_version < '3.9'",
    "pydantic>=2.0.0; python_version >= '3.9'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
jira-csv-upload = "cli:cli"

[project.urls]
Homepage = "https://github.com/star7js/jira-upload-csv"
Repository = "https://github.com/star7js/jira-upload-csv"
Issues = "https://github.com/star7js/jira-upload-csv/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
allow_redefinition = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "atlassian.*",
    "click.*"
]
ignore_missing_imports = true
ignore_errors = true

[[tool.mypy.overrides]]
module = ["pydantic", "pydantic.*", "pydantic._internal.*"]
ignore_missing_imports = true
ignore_errors = true
follow_imports = "skip"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 